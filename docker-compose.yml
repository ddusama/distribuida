version: '3'
services:
  app-books:
    image: ddusama/app-book:1.0.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-book.rule=PathPrefix(`/book`)"
      - "traefik.http.services.app-book.loadbalancer.server.port=4040"
    depends_on:
      - db
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/postgres
      - DATABASE_USER=postgres
      - DATABASE_PASS=postgres
    deploy:
      replicas: 1
    expose:
      - 4040
  app-authors:
    image: jaimesalvador/app-author:1.0.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-author.rule=PathPrefix(`/author`)"
      - "traefik.http.services.app-author.loadbalancer.server.port=9090"
    depends_on:
        - db
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/postgres
      - DATABASE_USER=postgres
      - DATABASE_PASS=postgres
    deploy:
      replicas: 1
    expose:
      - 9090
  app-web:
    image: jaimesalvador/app-web:1.0.0
    deploy:
      replicas: 1
    ports:
      - 8080:4567      
  db:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
  traefik:
    image: "traefik:v3.0"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80" # entrypoint on docker e.g: 8888
    ports:
      - "80:80" # localhost : entrypoint on docker e.g:  4545:8888
      - "6060:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"